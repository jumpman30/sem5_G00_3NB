@startuml
participant "User Interface" as UI
participant "Router" as Router
participant "BuildingController" as Controller
participant "BuildingService" as Service

participant "PassageRepository" as PassageRepository
participant "FloorRepository" as Repository
participant "PassageMapper" as Mapper
participant "Persistence" as Persistence

activate UI
UI -> Router: GET /api/buildings/:id/passages
activate Router
Router -> Controller: ctrl.getPassagesByBuildingId(buildingId)
activate Controller

Controller -> Service: response = getPassageFloors(buildingId)
activate Service
Service -> PassageRepository: findByBuilding(buildingId)
activate PassageRepository
PassageRepository -> Persistence : find()
PassageRepository -> Service: buildinFloors: Passage []
deactivate PassageRepository
alt not found
Service -> Controller: res.status(404)
deactivate Service
Controller -> Router: res.status(404)
deactivate Controller
Router -> UI :status 404 (Not found)
deactivate Router
end
Service -> Repository : floorsData = findById()
activate Service
activate Repository
Repository -> Persistence : findOne()
Repository --> Service: floors
deactivate Repository
Service -> Mapper: toFloorPassageRequestDTO(passages, floors)
activate Mapper
Mapper -> Service: floorPassageDto
deactivate Mapper
Service --> Controller: floorPassageDto
deactivate Service
Controller --> Router: floorPassageDto
deactivate Controller
Router --> UI: HTTP 200 OK (floors)
deactivate Router
deactivate UI
@enduml
