
@startuml
participant "User Interface" as UI
participant "Router" as Router
participant "BuildingController" as Controller
participant "BuildingService" as Service

participant "BuildingRepository" as Repository
participant "BuildingMapper" as Mapper
participant "BuildingCreateResponseDTO" as CreateResponseDTO
participant "BuildingSchema" as Schema
participant "BuildingModel" as Model
participant "BuildingCreateRequestDTO" as CreateRequestDTO
participant "Persistence" as Persistence

activate UI
UI -> Router: POST /Building (json)
activate Router
Router -> Controller: responseDTO =\ncreateBuilding(json)
activate Controller
Controller -> Controller: validate(json)
Controller -> Mapper: requestDTO = createCreateDTO()
activate Mapper
create CreateRequestDTO
Mapper -> CreateRequestDTO: requestDTO: <<new>>

deactivate Mapper

Controller -> Service: responseDTO =\ncreate(requestDTO)
activate Service
Service -> Service: validate(requestDTO)
Service -> Mapper: building = toModel(requestDTO)
activate Mapper
create Model
Mapper -> Model: building: <<new>>
deactivate Mapper
Service -> Repository: entity =\nsave(building)
activate Repository
Repository -> Mapper: schema = toSchema(entity)
activate Mapper
create Schema
Mapper -> Schema: schema: <<new>>
deactivate
Repository -> Persistence: persist(schema)
activate Persistence
deactivate Persistence
Repository -> Mapper: entity = toModel(schema)
activate Mapper
Mapper -> Model: entity: <<new>>
activate Model
deactivate Model
deactivate Mapper

Repository --> Service: entity
deactivate Repository

Service -> Mapper: responseDTO = createResponseDTO(entity)
activate Mapper
create CreateResponseDTO
Mapper -> CreateResponseDTO: responseDTO <<new>>
deactivate Mapper

Service --> Controller: responseDTO
deactivate Service

Controller --> Router: responseDTO
deactivate Controller
Router --> UI: HTTP 200 OK\njson(responseDTO)
deactivate Router
deactivate UI
@enduml
