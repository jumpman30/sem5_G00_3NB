@startuml
 !include C4_Sequence.puml
autonumber
    participant "Manager" as man
    participant ":OpenCloseCourseAction" as ac
    participant ":OpenCloseCourseActionUI" as ui
    participant ":OpenCloseCourseActionController" as ctrl
    participant ":ListCourseService" as list
    participant ":PersistenceContext" as pc
    participant ":RepositoryFactory" as rf
    participant ":Course" as course
    participant ":CourseRepository" as repo
    participant ":CoursePrinter" as printer


    activate man
    man -> ac : open and close courses
    activate ac
    ac->ui: show()
        deactivate ac
        activate ui
        ui->ctrl: Iterable<Course> allCourses()
        activate ctrl
        activate list
        ctrl->list: Iterable<Course> allCourses()
        list->pc:repositories()
        activate pc
        pc->rf:repositories()
        activate rf
        rf->repo**:course()
        rf-->pc: ok
        deactivate rf
        pc-->list:ok
        deactivate pc
        list-->ctrl:ok
        deactivate list
        ctrl --> ui : ok
        deactivate ctrl
        ui --> man : requests the course to open or close
        deactivate ui
        man -> ui : select the requested data
        activate ui
        ui->ctrl: changeCourseState(course)
            activate ctrl
            ctrl->course: toogleState()
            activate course
            course-->ctrl : ok
            deactivate course
            ctrl -> repo : save(course)
            activate repo
        repo --> ctrl : ok
        deactivate repo
        ctrl --> ui : ok
    deactivate ctrl
    ui --> man : informs the success of the operation

@enduml